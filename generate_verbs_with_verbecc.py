
"""
Script to generate a JS file with full French verb data using verbecc.
- Outputs: const verbs = [...]; const tenses = {...}; const pronouns = [...];
- For verbs not in your frequency list, assigns frequency: "other".
- You can update frequencies later as needed.
"""
import json
import verbecc
from verbecc.conjugator import Conjugator
from verbecc.verb import get_all_infinitives
ALL_VERBS = sorted(set(get_all_infinitives()))

# --- User-provided frequency data (from your old verbs.full.js) ---
# Map: infinitive -> frequency
FREQUENCY_MAP = {
    "Ãªtre": "common",
    "avoir": "common",
    "aller": "common",
    "faire": "common",
    "venir": "common",
    "pouvoir": "common",
    "vouloir": "common",
    "savoir": "common",
    "devoir": "common",
    "dire": "common",
    "voir": "common",
    "prendre": "common",
    "mettre": "common",
    "croire": "common",
    "parler": "common",
    "passer": "common",
    "trouver": "common",
    "donner": "common",
    "comprendre": "common",
    "partir": "common",
    "demander": "common",
    "tenir": "common",
    "aimer": "common",
    "penser": "common",
    "rester": "common",
    # ... add more as needed ...
}

# --- List of all verbs to generate (from verbecc) ---
from verbecc.verb import get_all_infinitives
ALL_VERBS = sorted(set(get_all_infinitives()))

# --- Tenses and pronouns to generate ---
TENSES = [
    "present", "imparfait", "futurSimple", "passeCompose", "plusQueParfait", "subjonctifPresent", "conditionnelPresent"
]
PRONOUNS = ["je", "tu", "il/elle/on", "nous", "vous", "ils/elles"]

conjugator = Conjugator(lang="fr")

# --- Build verbs array ---
verbs = conjugator.get_infinitives()

for infinitive in ALL_VERBS:
    # Try to get translation from verbecc (if available), else use ""
    translation = ""
    try:
        from verbecc.verb import get_translation
        translation = get_translation(infinitive) or ""
    except Exception:
        pass
    freq = FREQUENCY_MAP.get(infinitive, "other")
    verbs.append({
        "infinitive": infinitive,
        "translation": translation,
        "frequency": freq
    })

# --- Build tenses object ---
tenses = {}
for tense in TENSES:
    tenses[tense] = {}
    for infinitive in ALL_VERBS:
        try:
            conj = conjugator.conjugate(infinitive)
            tense_data = conj[tense]
            filtered = {p: tense_data.get(p, "") for p in PRONOUNS}
            tenses[tense][infinitive] = filtered
        except Exception as e:
            tenses[tense][infinitive] = {p: "" for p in PRONOUNS}

# --- pronouns array ---
pronouns = PRONOUNS

# --- Write to JS file ---
def to_js(varname, obj):
    return f"const {varname} = {json.dumps(obj, ensure_ascii=False, indent=2)};\n"

with open("generated_verbs_full.js", "w", encoding="utf-8") as f:
    f.write("// AUTO-GENERATED by generate_verbs_with_verbecc.py\n")
    f.write("// You can update frequencies in the verbs array as needed.\n\n")
    f.write(to_js("verbs", verbs))
    f.write("\n")
    f.write(to_js("tenses", tenses))
    f.write("\n")
    f.write(to_js("pronouns", pronouns))

print("Done. Output written to generated_verbs_full.js")
